services:
  redis-db:
    networks:
      - cfe
    image: redis:latest
    ports:
      - "6555:6379"
    volumes:
      - redis_data:/data
  timescaledb:
    networks:
      - cfe
    # hub.docker.com
    image: timescale/timescaledb:latest-pg16
    # environment:
    #   POSTGRES_USER: your_username
    #   POSTGRES_PASSWORD: your_password
    #   POSTGRES_DB: your_database
    env_file:
      - .env.db
    ports:
      - "5555:5432" # localhost:5432
    volumes:
      - timescale_data:/var/lib/postgresql/data
    restart: unless-stopped
  django-base: &django-base
    networks:
      - cfe
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.web-container
    develop:
      watch:
        - action: sync+restart
          path: ./src
          target: /code
        - action: sync+restart
          path: ./requirements.txt
          target: /tmp/requirements.txt
  web:
    <<: *django-base
    environment:
      - NODE_ID=0
      - PORT=8088
    ports:
      - "8088:8088"
  beat:
    <<: *django-base
    environment:
      - NODE_ID=0
    command: |
      celery -A cfehome beat -l info
  node_1:
    <<: *django-base
    environment:
      - NODE_ID=5
    command: |
      celery -A cfehome worker -Q node-5 -l info
  node_2:
    <<: *django-base
    environment:
      - NODE_ID=6
    command: |
      celery -A cfehome worker -Q node-6 -l info
  node_3:
    <<: *django-base
    environment:
      - NODE_ID=7
    command: |
      celery -A cfehome worker -Q node-7 -l info
  node_8:
    <<: *django-base
    environment:
      - NODE_ID=8
    command: |
      celery -A cfehome worker -Q node-8 -l info

volumes:
  redis_data:
  timescale_data:

networks:
  cfe: