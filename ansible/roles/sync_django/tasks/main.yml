---
- name: Ensure os deps
  apt:
    name: 
      - libpq-dev
      - rsync
    update_cache: yes
    state: present
  become: yes

- name: Ensure /opt/app directory exists
  ansible.builtin.file:
    path: "/opt/app"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  become: yes

- name: Debug playbook directory
  ansible.builtin.debug:
    msg: "Playbook directory is: {{ playbook_dir }}"


- name: Sync project files to remote
  ansible.posix.synchronize:
    src: "{{ playbook_dir }}/../../"
    dest: "/opt/app/"
    delete: yes
    recursive: yes
    archive: yes
    rsync_opts:
      - "--human-readable"
      - "--include=**.gitignore"
      - "--exclude=/.git"
      - "--exclude-from={{ playbook_dir }}/../../.gitignore"
      - "--delete-after"
  become: yes
  become_user: "{{ ansible_user }}"
  register: sync_result
  ignore_errors: yes

- name: Debug sync result
  ansible.builtin.debug:
    var: sync_result
  when: sync_result is failed

- name: Copy encrypted .env file
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/../../.env.prod"
    dest: /opt/app/.env
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
    decrypt: yes
  become: yes

- name: Ensure /opt/venv directory exists
  ansible.builtin.file:
    path: "/opt/venv"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  become: yes

- name: Install project requirements
  pip:
    requirements: "/opt/app/requirements.txt"
    virtualenv: "/opt/venv"
    virtualenv_command: python3 -m venv
  become: yes

- name: Run Django migrations
  ansible.builtin.command:
    cmd: /opt/venv/bin/python manage.py migrate
    chdir: /opt/app/src
  become: yes
  become_user: "{{ ansible_user }}"